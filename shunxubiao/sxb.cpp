#include "stdio.h"
#include "math.h"
#define MAX_LEN 16

struct A
    {
      int list[MAX_LEN];
      int n;
    };

main()
{
  void Initiate();
  int Length();
  int *GetAt();
  int GetIndex();
  int *GetPrior();
  int *GetNext();
  int Insert();
  int Delete();
  void Reverse();
  /*????足?D∩?‾3足D辰㏒?赤那3谷谷?那?1|?邦辰a?車*/
	int i,n,x,id,data,data1,data2;
	struct A aa;
	printf("Intiate List!\n");
/* ⊿迄∩∩?“辰?????㊣赤[Initiate( )]㏒?   */  
	Initiate(&aa);
/* ⊿迆足芍那?車??∫那?豕?"??D?㊣赤3∟?豕"㏒?*/
	printf("The length of list aa is:");
  	scanf("%d",&n);
/* ⊿??迄?Y車??∫那?豕?米?"??D?㊣赤3∟?豕"㏒??e辰?足芍那?車??∫那?豕?"??D?㊣赤?D米??‾???a??"㏒?赤那3谷??D?㊣赤米?11?足[Insert()]㏒?*/
  	for(i=1;i<=n;i++)
  	{
	  	printf("Enter the %dth data :",i);
	  	scanf("%d",&x);
	  	Insert(&aa,i,x);
	  }
 	n=Length(&aa);
/* ⊿邦赤“1y米‾車?℅車3足D辰Length() ∩辰車?那?3?米㊣?∼??D?㊣赤米?3∟?豕㏒? */    	
 	printf("The length of list is:\t%d\n",n);
/* ⊿Y赤“1y米‾車?℅車3足D辰*GetAt() ∩辰車?那?3?米㊣?∼??D?㊣赤米??迄車D?a??㏒?(?那㏒o2?米‾車?℅車3足D辰*GetAt()㏒?豕?o?那米??㏒?) */
 	printf("The list is:\n");
 	for(i=1;i<=n;i++)
 	{
	 	printf("The %dth is :%d\n",i,*GetAt(&aa,i));
	 //	printf("The %dth is :%d\n",i,aa.list[i-1]);
	 }
/* ⊿T足芍那?車??∫那?豕?辰a2谷?辰米??a??那y?米㏒?赤“1y米‾車?℅車3足D辰GetIndex()∩辰車?那?3?﹞?o?辰a?車米?米迆辰????a??米?????㏒?                 */
/*                                              *GetPrior()∩辰車?那?3????a??米??∼?y?a???米㏒?                         */
/*                                             *GetNext() ∩辰車?那?3????a??米?o車?足?a???米㏒?          */	 
	 printf("Enter the data to be searched :");
	 scanf("%d",&data);
/* ⊿?赤“1y米‾車?℅車3足D辰Insert()?迆米㊣?∼??D?㊣赤米?㊣赤赤﹞o赤㊣赤?2?‾2?豕?辰????a??0㏒?∩辰車?那?3?2?豕?o車米???D?㊣赤㏒? */
	 id=GetIndex(&aa,data);
	 printf("Index of data %d is :\t%d\n",data,id);
	 data1=*GetPrior(&aa,data);
	 printf("Prior of data %d is :\t%d\n",data,data1);
	 data2=*GetNext(&aa,data);
	 printf("Next of data %d is:\t %d\n",data,data2);
	 printf("Insert data 0 into Head and End of list!\n");
	 Insert(&aa,1,0);
	 Insert(&aa,aa.n+1,0);
	 printf("The list after insert operation is :\n");
	 for(i=1;i<=aa.n;i++)
	 printf("\tThe %dth data is : %d\n",i,aa.list[i-1]);
/* ⊿角赤“1y米‾車?℅車3足D辰Delete()谷?3y⊿??D2?豕?米??‾???a??㏒?∩辰車?那?3?谷?3yo車米???D?㊣赤[*GetAt( )]㏒?*/
	 printf("delete the data Insert!\n");
	 Delete(&aa,1);
	 Delete(&aa,aa.n);
	 printf("The list after Insert operation is :\n");
	 for(i=1;i<=aa.n;i++)
	 printf("\tThe %dth data is : %d\n",i,aa.list[i-1]);
	 printf("Reverse list!\n");
	 Reverse(&aa);
	 printf("The list after Reverse operation is :\n");
	for(i=1;i<=aa.n;i++)
	 printf("\tThe %dth data is : %d\n",i,aa.list[i-1]); 
  getch();

}
/* ⊿芍米‾車?℅?DD㊣角D∩米??3D辰?芍11????D?㊣赤米???℅a℅車3足D辰Reverse( )㏒?∩辰車?那?3???℅ao車米???D?㊣赤?㏒     */
void Reverse(a)
/*?a????㊣那車??a????那y2???車|㏒??a????㊣那=?a????那y-1*/
struct A *a;
{
  /*????足?D∩℅車3足D辰㏒?赤那3谷?3D辰?芍11????D?㊣赤米???℅a*/

int i;

  for(i=0;i<=floor(a->n/2)-1;i++)
    {
      a->list[i]=a->list[i]^a->list[a->n-i-1];
      a->list[a->n-i-1]=a->list[a->n-i-1]^a->list[i];
      a->list[i]=a->list[i]^a->list[a->n-i-1];
    }
}

/*?????a㏒o?3D辰?芍11????D?㊣赤米??迄㊣?2迄℅‾℅車3足D辰*/

/*3?那??‘??D?㊣赤㏒o∩∩?“辰???㊣赤*/
/*?a????㊣那車??a????那y2???車|㏒??a????㊣那=?a????那y-1*/
void Initiate(a)
struct A *a;
{
  a->n=0;
  /*?a????㊣那車??a????那y??車|㏒???㊣赤角?車D辰???0?a??*/
  /*  a->list[0]=0;                          */
}

/*豕???D?㊣赤米?3∟?豕㏒o12車D????車DD∫?芍米?*/
/*?a????㊣那車??a????那y2???車|㏒??a????㊣那=?a????那y-1*/
int Length(a)
struct A *a;
{
  return a->n;
}


/*?a????㊣那車??a????那y2???車|㏒??a????㊣那=?a????那y-1*/
/*?芍豕?米迆I???a??*/
int *GetAt(a,I)
struct A *a;
int I;
{
  if((I>=1)&&(I<=a->n))
    return &a->list[I-1];
  else
    return NULL;
}

/*?a????㊣那車??a????那y2???車|㏒??a????㊣那=?a????那y-1*/
/*﹞米???a??x米?D辰o?㏒“??D?㊣赤?D米迆?????a??㏒?*/
int GetIndex(a,x)
struct A *a;
int x;
{
  int k;
  for(k=0;k<a->n;k++)
    {
      if(a->list[k]==x)
      return k+1;
    }
  return 0;
}


/*?a????㊣那車??a????那y2???車|㏒??a????㊣那=?a????那y-1*/
/*﹞米???a??x米??∼?y?a??*/
int *GetPrior(a,x)
struct A *a;
int x;
{
  int k;
  k=GetIndex(a,x);
  if(k>1)
    return GetAt(a,k-1);
  else
    return NULL;
}

/*?a????㊣那車??a????那y2???車|㏒??a????㊣那=?a????那y-1*/
/*﹞米???a??x米?o車?足?a??*/
int *GetNext(a,x)
struct A *a;
int x;
{
  int k;
  k=GetIndex(a,x);
  if(k<a->n)
    return GetAt(a,k+1);   /*豕??a??x?迆??D?㊣赤?D2?∩??迆㏒??辰﹞米????D?㊣赤米迆辰????a??*/
  else
    return NULL;
}

/*bool Insert(a,I,x)*/       /*?a????㊣那車??a????那y2???車|㏒??a????㊣那=?a????那y-1*/
int Insert(a,I,x)            /*???a??x2?豕?米???D?㊣赤米?米迆I???a??米?????㏒???D?㊣赤3∟?豕?車1*/
struct A *a;
int I;
int x;
{
/*??㊣赤米?∩|角赤㏒o2??迆㊣赤赤﹞米迆辰????a??*/
/*﹞???㊣赤米?∩|角赤㏒o2??迆㊣赤?D?辰℅?o車辰????a??米?o車??*/
  if((I>=1)&&(I<=a->n+1)&&(a->n<MAX_LEN))
    {
      int k;
      for(k=a->n;k>=I;k--)              /*o車辰?米迆k???a??㏒oa->list[k-1]*/
        {
            a->list[k]=a->list[k-1];    /*?a????㊣那車??a????那y2???車|㏒??a????㊣那=?a????那y-1*/
        }
      a->list[I-1]=x;
      a->n++;
      return 1; /*2?豕?3谷1|*/
    }
  else
    return 0;   /*2?豕?那∫∼邦*/
}


/*?a????㊣那車??a????那y2???車|㏒??a????㊣那=?a????那y-1*/
/*谷?3y??D?㊣赤?D米迆I???a??㏒???D?㊣赤3∟?豕??1*/
int Delete(a,I) /*bool Delete(a,I)*/
struct A *a;
int I;
{
  int k;
  if((I>=1)&&(I<=a->n))
    {
      for(k=I+1;k<=a->n;k++)              /*?∼辰?米迆k???a??㏒oa->list[k-1]*/
        {
            a->list[k-2]=a->list[k-1];    /*?a????㊣那車??a????那y2???車|㏒??a????㊣那=?a????那y-1*/
        }
      a->n--;
      return 1;     /*谷?3y3谷1|*/
    }
  else
    return 0;       /*谷?3y那∫∼邦*/
}
